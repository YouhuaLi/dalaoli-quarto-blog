---
title: '番外篇：听众问答：有关用图灵机证明哥德巴赫猜想'
date: "2020-06-16"
categories:
  - "每周一题"
---

上期有关用忙碌海狸图灵机的节目播出后，有些听众表示不解。特别是那个有关用图灵机证明哥德巴赫猜想的程序，疑问的焦点是：为什么这个图灵机可以在有限时间内证明哥德巴赫猜想？

根据我节目中所述，这个图灵机的逻辑就是逐个验证偶数，看能不能表示成两个质数的和，可以的话就检查下一个，否则停机。这个逻辑是再简单不过，但过去我们知道这种方法仅找到反例时有效。如果程序不停，你也不能说哥德巴赫猜想成立。但为什么这次用图灵机运行，就对正反两面起效了呢？

我觉得第一点要搞清楚这样一条逻辑线：图灵机跑过了BB(4888)步还未停机→这个图灵机永不停机 →歌德巴赫猜想为真”

其中一条逻辑推理成立是因为我们定义了BB(4888)是2色-4888状态可停机的图灵机的最大运行步数。那么当图灵机运行过了这一步，自然图灵机就不会停机了。

而第二个推理成立是我们的编程逻辑决定的。因为我们编程的逻辑决定了，无论多大的偶数，总在有限的时间内可以被验证到。所以当图灵机永远停机的情况下，任何一个偶数总会被验证。

有这两条，所以我们知道这个图灵机能在有限时间能证明哥德巴赫猜想。 但你为什么会感觉以上逻辑这么难受呢？归根结底，其实是选择公理在作怪。

选择公理说，当某个集合不为空时，我总能从集合中选择一个元素，用于后续的推理，但我不需要指出确切的选择这个元素的方法。

现在就有这样一个：定义是”2色-4888状态的图灵机”，这是完全合法的一个集合定义，而且只有有限多个元素。现在我说，选择其中可以停机的图灵机组成的子集，构成另一个集合。但这是一个合法的定义吗？我说，合理啊：因为图灵机要么停机，要么不停机，总有一些停机的可以构成这样一个集合。

但是，当你给我一个2色-4888状态的图灵机，请我判定其是否属于这个停机集合时，我就犯难了。虽然有些图灵机可以很快停机或者进入循环，但是大概率下，我是无法判定这个图灵机是否停机的，所以，我只能说，我做不到。但是选择公理允许我不指出具体方法，去选择集合中的元素。这是我第一次用到选择公理。

接下来，对可以停机的“2色-4888状态的图灵机”，其中必有一台是停机前运行步骤最长的，我把这个步数定义为BB(4888)。这时你问题又来了，你问：你告诉我怎么找到那台运行步骤最长的图灵机？我说我办不到。你又问：那你告诉我怎么计算BB(4888)，我说我：算不出，这是不可计算数，我只知道它是一个有限值，我连它是奇数还是偶数都不知道，但选择公理都不要求给出具体计算方法啊。这是我又一次用到选择公理。

所以对以上过程，你可以看出可以停机的“2色-4888状态的图灵机”这个概念已经是相当模糊的一个定义了，我们要基于这个定义，从中再引申出BB(4888)的定义，所以，BB(4888)这个数字就更显得虚无缥缈，所以也难怪你会对整个推理过程产生怀疑。

但是选择公理允许我们做这样的推理，所以你只要能接受选择公理，你就只能接受以上推理过程。

另外，还有人问，这种图灵机验证方式是不是对所有可以枚举的数论问题都是万能的，都可以在有限时间得出结果？答案是否定的，因为有些猜想我们可以对其编程，但是程序即使永不停机，也不能证明命题为真。

一个很好的例子就是考拉兹猜想。要编写一个验证考拉兹猜想的程序那是再简单不过了，就是把某个整数送进去，然后进行考拉兹变换，如果变换到4这个数字，就说明当前数字符合考拉兹猜想，然后可以验证下一个整数。

但是，如果我们知道图灵机不会停机，是否就证明考拉兹猜想为真了呢？稍微想一下，你会发现不行。因为不管当前图灵机在验证一个多么大的数字，你通过观察图灵机，你无法得知当前这个数字是否最终能变换到4。只要程序没停，你无法排除当前数字是否会进入4-2-1以外的循环，或者会发散。所以，图灵机不停机也不能证明考拉兹猜想为真。

而对哥德巴赫猜想，对任何一个偶数的验证，我们是确信能在有限步骤内完成的，这是它与考拉兹猜想的本质区别。John Conway也证明过一般化的考拉兹猜想是不可决定的/undecidable，通过以上图灵机的例子，我相信你也会对undecidable的含义有更深理解。

接下来一个问题是有某位群友问，是否能通过图灵机的状态数量多少，来考察一个命题的难易程度？比如哥德巴赫猜想的图灵机是4888状态，而黎曼猜想的是5372，是否就提示黎曼猜想比哥德巴赫猜想难？

但我们要知道这个状态数实际反应的编程逻辑的复杂，而不是问题本身的难度。哥德巴赫猜想本身验证逻辑很简单，自然可以使状态数很低。实际上已经有人把验证哥德巴赫猜想猜想的图灵机状态数缩小到47，但这只是体现了编程逻辑的简单。

另外BB(47)这个数字还是太大了，所以这并不能使我们真的能去验证哥德巴赫猜想。目前已人类能力，大概只能运行最多5个状态的图灵机，但是5个状态的图灵机能做的事又太少了。

最后一个问题，是署名“海阔天空”的听众在公众号上给我留言，他对我节目中提到的那个可以证明ZFC公理系统一致性的图灵机产生疑问。因为我们已经知道ZFC系统不能证明自身的一致性，那么凭什么说那个图灵机能证明ZFC的一致性？如果这个图灵机运行也是遵循ZFC公理，那么它就不能证明ZFC的一致性，除非它引入更多公理。

这位听众的思考非常深入，他的分析确实是对的，那台图灵机确实引入了更多的公理。我上期节目其实没有说清楚，那个验证ZFC公理一致性的图灵机，其验证的命题并不是“ZFC是一致的”，而是一个比ZFC一致性更强的命题，称为“弗里德曼断言” （Friedman’s Mathematical Statement）。这位弗里德曼全名是哈维·弗赖德曼，今年71岁，是美国的逻辑学家。而不是前苏联的数学家和宇宙学家，那个提出弗里德曼模型的亚历山大·弗里德曼。

这个弗里德曼断言本身看上去像是一个图论中的命题，它的具体含义我们不用管，但是有人证明过过弗里德曼断言如果为真，则可以证明另一个公理系统Stationary Ramesy Property是一致的。Stationary Ramesy Property我没有找到确切的中文名称，字面意思是“静态拉姆齐属性”，简称为SRP，它的具体含义我们也不用管。我们只要知道SRP是比ZFC更强的公理系统，包含更多公理。而已经证明，SRP的一致性性可以推出ZFC的一致性。因此，整个逻辑线是：

那个7918个状态的称为Z的图灵机(Z)不停机->弗里德曼断言为真->SRP一致性->ZFC的一致性。

而之所以选择对弗里得曼断言编程，是因为其逻辑比较简单，容易在图灵机上实现。